package org.jetbrains.plugins.scala.lang.typeInference
package generated

class TypeInferenceMethodCallTest extends TypeInferenceTestBase
  //This class was generated by build script, please don't change this
  override def folderPath: String = super.folderPath + "methodCall/"

  def testApplyArray() { doTest() }

  def testApplyCall() { doTest() }

  def testApplyList() { doTest() }

  def testApplySeqCall() { doTest() }

  def testCaseClassCall() { doTest() }

  def testCharAt() { doTest() }

  def testExplicitStringCharAt() { doTest() }

  def testFunctionApply() { doTest() }

  def testFunctionApplyReturnTypeAlsoHasApplyMethod() { doTest() }

  def testFunctionApplyWithParams() { doTest() }

  def testFunctionDirectCall() { doTest() }

  def testFunctionLiteralApplyCall() { doTest() }

  def testFunctionLiteralCall() { doTest() }

  def testHashaSetCreation() { doTest() }

  def testImplicitApply() { doTest() }

  def testInfixIntegers() { doTest() }

  def testLibraryList() { doTest() }

  def testMacroCall() { doTest() }

  def testMapApply() { doTest() }

  def testObjectApplyCall() { doTest() }

  def testOverloadedCall() { doTest() }

  def testPrivateElementFromContext() { doTest() }

  def testRecursive() { doTest() }

  def testReduceLeft() { doTest() }

  def testRepeated2() { doTest() }

  def testSCL1760() { doTest() }

  def testSimpleCall() { doTest() }

  def testSimpleCall2() { doTest() }

  def testSimpleStringCharAt() { doTest() }

  def testSplit() { doTest() }

  def testStaticCall() { doTest() }

  def testSuperCall() { doTest() }

  def testThisTypeCompound() { doTest() }

  def testThisTypeSimple() { doTest() }

  def testUpdateCall() { doTest() }
